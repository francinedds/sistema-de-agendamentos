unit view.consultas;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.Buttons, Vcl.StdCtrls,
  Vcl.Imaging.pngimage, Vcl.ExtCtrls, Data.DB, Vcl.Grids, Vcl.DBGrids,
  service.conexao, Vcl.Menus;

type
  TViewConsultas = class(TForm)
    pnlHeader: TPanel;
    pnlLogo: TPanel;
    imgLogo: TImage;
    lblLogo: TLabel;
    pnlUsuarioLogado: TPanel;
    btnClose: TSpeedButton;
    pnlFooter: TPanel;
    pnlContent: TPanel;
    lblNomeCompleto: TLabel;
    DBGrid: TDBGrid;
    DataSource: TDataSource;
    PopupMenu: TPopupMenu;
    Deletar: TMenuItem;
    procedure btnCloseClick(Sender: TObject);
    procedure DeletarClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  ViewConsultas: TViewConsultas;

implementation

{$R *.dfm}

procedure TViewConsultas.btnCloseClick(Sender: TObject);
begin
  Self.Close;
end;

procedure TViewConsultas.DeletarClick(Sender: TObject);
begin
  if DBGrid.SelectedRows.Count > 0 then
  begin
    // Exemplo com TQuery/TADOQuery:
    // Primeira linha selecionada (o que é equivalente ao item selecionado na grid)
    DBGrid.DataSource.DataSet.Locate('con_cliente', DBGrid.DataSource.DataSet.FieldByName('con_cliente').AsInteger, []);

    // Excluir o registro no banco de dados
    ServiceConexao.FDQuery_Consultas.SQL.Text := 'DELETE FROM consultas WHERE con_cliente = :con_cliente';
    ServiceConexao.FDQuery_Consultas.ParamByName('con_cliente').Value := DBGrid.DataSource.DataSet.FieldByName('con_cliente').AsInteger;
    ServiceConexao.FDQuery_Consultas.ExecSQL;

    // Após excluir, recarregar os dados na grid
    DBGrid.DataSource.DataSet.Refresh;  // ou DBGrid1.DataSource.DataSet.Requery, dependendo do componente utilizado
  end
  else
  begin
    ShowMessage('Selecione um item para deletar.');
  end;
end;

end.
